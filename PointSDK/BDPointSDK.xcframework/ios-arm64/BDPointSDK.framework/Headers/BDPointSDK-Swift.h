#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
#ifndef BDPOINTSDK_SWIFT_H
#define BDPOINTSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import CoreLocation;
@import Foundation;
@import ObjectiveC;
@import UserNotifications;
#endif

#import <BDPointSDK/BDPointSDK.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="BDPointSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

SWIFT_CLASS("_TtC10BDPointSDK38AccuracySuppressionRemoteConfiguration")
@interface AccuracySuppressionRemoteConfiguration : NSObject
@property (nonatomic, readonly) NSTimeInterval accuracySuppressionGracePeriod;
@property (nonatomic, readonly) NSTimeInterval accuracySuppressionMinAccuracyTimeInterval;
@property (nonatomic, readonly) CLLocationAccuracy accuracySuppressionMinAccuracy;
@property (nonatomic, readonly) NSTimeInterval accuracySuppressionMaxAccuracyTimeInterval;
@property (nonatomic, readonly) CLLocationAccuracy accuracySuppressionMaxAccuracy;
@property (nonatomic, readonly) BOOL accuracySuppressionEnabled;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end

@class NSString;

/// Details of the current application
SWIFT_CLASS("_TtC10BDPointSDK7AppInfo")
@interface AppInfo : NSObject
/// Version of the application
@property (nonatomic, readonly, copy) NSString * _Nonnull appBuildVersion;
/// Minimum supported OS version
@property (nonatomic, readonly, copy) NSString * _Nonnull minimumOSVersion;
/// Bundle Id of the application
@property (nonatomic, readonly, copy) NSString * _Nonnull customerApplicationId;
/// The PointSDK version running with the application
@property (nonatomic, readonly, copy) NSString * _Nonnull sdkVersion;
/// PointSDK customEventMetaData at the time trigger event is sent
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull customEventMetaData;
/// :nodoc:
- (nonnull instancetype)initWithMetaData:(NSDictionary<NSString *, NSString *> * _Nonnull)metaData;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Protocol to convert an object to a Json string
SWIFT_PROTOCOL("_TtP10BDPointSDK10JsonString_")
@protocol JsonString <NSObject>
/// Convert to JSON string
/// This function throws an error if JSON encoding process fails
- (NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


@interface AppInfo (SWIFT_EXTENSION(BDPointSDK)) <JsonString>
/// Convert to JSON string
/// This function throws an error if JSON encoding process fails
- (NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


@interface AppInfo (SWIFT_EXTENSION(BDPointSDK))
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


@class NSPredicate;
@class NSManagedObjectContext;
@class NSManagedObject;

SWIFT_PROTOCOL("_TtP10BDPointSDK11Persistable_")
@protocol Persistable <NSObject>
/// Associated EntityName
@property (nonatomic, readonly, copy) NSString * _Nonnull entityName;
@property (nonatomic, readonly, strong) NSPredicate * _Nonnull predicate;
/// Init ManagedObject associated with the model.
/// \param context current NSManagedObjectContext
///
///
/// returns:
/// created NSManagedObject
- (NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
@end


@interface AppInfo (SWIFT_EXTENSION(BDPointSDK)) <Persistable>
@property (nonatomic, readonly, strong) NSPredicate * _Nonnull predicate;
@property (nonatomic, readonly, copy) NSString * _Nonnull entityName;
- (NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC10BDPointSDK35AppRestartNotificationConfiguration")
@interface AppRestartNotificationConfiguration : NSObject
@property (nonatomic, readonly) BOOL requiresAppRestartNotification;
@property (nonatomic, readonly, copy) NSString * _Nullable appRestartNotificationTitle;
@property (nonatomic, readonly, copy) NSString * _Nullable appRestartNotificationButtonText;
- (void)disable;
- (void)enableWithNotificationTitle:(NSString * _Nullable)notificationTitle notificationButtonText:(NSString * _Nullable)notificationButtonText;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSDate;

/// Details about current state of the application
SWIFT_CLASS("_TtC10BDPointSDK8AppState")
@interface AppState : NSObject
/// Current Battery level of the device. 0 .. 1.0. -1.0 if UIDeviceBatteryStateUnknown
@property (nonatomic, readonly) NSDecimal batteryLevel;
/// Whether Bluebar mode (aka Background Location Access) is enabled or not.
/// See out Documentation for mode details: https://docs.bluedot.io/ios-sdk/ios-features/blue-bar/
@property (nonatomic, readonly) BOOL blueBarEnabled;
/// When rules were last downloaded from Canvas
@property (nonatomic, readonly, copy) NSDate * _Nullable lastRuleDownload;
/// Location permission status. Available values:  [always, while_using, denied, not_determined, restricted, unknown]
@property (nonatomic, readonly, copy) NSString * _Nonnull locationPermission;
/// Notification permission status. Available values: [authorized, provisional, ephemeral, not_determined, denied, unknown]
@property (nonatomic, readonly, copy) NSString * _Nonnull notificationPermission;
/// Application View status. Available values: [foreground, background]
@property (nonatomic, readonly, copy) NSString * _Nonnull viewState;
/// :nodoc:
- (nonnull instancetype)initWithLastRuleDownload:(NSDate * _Nullable)lastRuleDownload osRestrictions:(NSArray<NSString *> * _Nonnull)osRestrictions;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface AppState (SWIFT_EXTENSION(BDPointSDK)) <JsonString>
/// Convert to JSON string
/// This function throws an error if JSON encoding process fails
- (NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


@interface AppState (SWIFT_EXTENSION(BDPointSDK)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
@end


@interface AppState (SWIFT_EXTENSION(BDPointSDK))
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end



@interface AppState (SWIFT_EXTENSION(BDPointSDK)) <Persistable>
@property (nonatomic, readonly, copy) NSString * _Nonnull entityName;
@property (nonatomic, readonly, strong) NSPredicate * _Nonnull predicate;
- (NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
@end

@class CLLocationManager;

@interface BDLocationManager (SWIFT_EXTENSION(BDPointSDK))
- (void)authorizationChangedWithManager:(CLLocationManager * _Nonnull)manager status:(CLAuthorizationStatus)status;
@end






@interface CLCircularRegion (SWIFT_EXTENSION(BDPointSDK))
- (BOOL)isEqualToCircularRegion:(CLCircularRegion * _Nonnull)circularRegion SWIFT_WARN_UNUSED_RESULT;
@end



@class BDLocation;

@interface CLLocation (SWIFT_EXTENSION(BDPointSDK))
- (nonnull instancetype)initWithLocation:(BDLocation * _Nonnull)location;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_PROTOCOL("_TtP10BDPointSDK8Checkout_")
@protocol Checkout <NSObject>
@property (nonatomic, readonly) NSTimeInterval dwellTime;
@end


SWIFT_CLASS("_TtC10BDPointSDK10ClientData")
@interface ClientData : NSObject
- (nonnull instancetype)initWithLocation:(BDLocation * _Nonnull)location OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface ClientData (SWIFT_EXTENSION(BDPointSDK)) <BDPJSONSerializable>
- (NSDictionary * _Nullable)dictionaryRepresentation SWIFT_WARN_UNUSED_RESULT;
@end


/// A CrossedFence records details when a Fence is crossed.
/// Useful to determine and inspect the list of crossed fences when a Travel Path condition is used.
SWIFT_CLASS("_TtC10BDPointSDK12CrossedFence")
@interface CrossedFence : NSObject
/// Id of the crossed fence
@property (nonatomic, readonly, copy) NSString * _Nonnull fenceId;
/// Name of the crossed fence
@property (nonatomic, readonly, copy) NSString * _Nonnull fenceName;
/// Time crossing the fence
@property (nonatomic, readonly, copy) NSDate * _Nonnull crossTime;
/// Location where fence was crossed
@property (nonatomic, readonly, strong) CLLocation * _Nonnull location;
/// :nodoc:
- (nonnull instancetype)initWithFenceId:(NSString * _Nonnull)fenceId fenceName:(NSString * _Nonnull)fenceName location:(CLLocation * _Nonnull)location crossTime:(NSDate * _Nonnull)crossTime OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface CrossedFence (SWIFT_EXTENSION(BDPointSDK)) <JsonString>
/// Convert to JSON string
/// This function throws an error if JSON encoding process fails
- (NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


@interface CrossedFence (SWIFT_EXTENSION(BDPointSDK)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
@end


@interface CrossedFence (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


@interface CrossedFence (SWIFT_EXTENSION(BDPointSDK)) <Persistable>
@property (nonatomic, readonly, copy) NSString * _Nonnull entityName;
@property (nonatomic, readonly, strong) NSPredicate * _Nonnull predicate;
- (NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
@end

@class BDFilter;

/// :nodoc:
SWIFT_CLASS("_TtC10BDPointSDK19CrossedFilterDetail")
@interface CrossedFilterDetail : NSObject
@property (nonatomic, strong) BDFilter * _Nonnull filter;
@property (nonatomic, strong) CLLocation * _Nonnull location;
- (nonnull instancetype)initWithFilter:(BDFilter * _Nonnull)filter location:(CLLocation * _Nonnull)location OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface CrossedFilterDetail (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic, readonly) NSUInteger hash;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@class NSPersistentContainer;

SWIFT_PROTOCOL("_TtP10BDPointSDK22DataControllerProtocol_")
@protocol DataControllerProtocol <NSObject>
@property (nonatomic, copy) void (^ _Nonnull errorHandler)(NSError * _Nonnull);
@property (nonatomic, readonly, strong) NSPersistentContainer * _Nonnull persistentContainer;
- (void)removeStalePendingEventsWithCompletion:(void (^ _Nonnull)(void))completion;
@end


SWIFT_CLASS("_TtC10BDPointSDK14DataController")
@interface DataController : NSObject <DataControllerProtocol>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DataController * _Nonnull instance;)
+ (DataController * _Nonnull)instance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) void (^ _Nonnull errorHandler)(NSError * _Nonnull);
@property (nonatomic, strong) NSPersistentContainer * _Nonnull persistentContainer;
/// Starting iOS12, Transformable property in CoreData needs to conform to NSSecureCoding for coding/decoding,
/// otherwise Xcode throws warning message “ ‘NSKeyedUnarchiveFromData’ should not be used to for un-archiving and will be removed in a future release”
/// Need to create + register custom Transformers to let CoreData know what type of class it should encode to/decode from.
- (void)registerTransformers;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSUUID;
@class DisabledZone;
@class PointSDKConfiguration;
@class ZoneJustTriggered;
@class BDZoneJustTriggered;

@interface DataController (SWIFT_EXTENSION(BDPointSDK))
- (void)insertDisabledZoneWithId:(NSUUID * _Nonnull)id completion:(void (^ _Nonnull)(void))completion;
- (void)getAllDisabledZonesWithCompletion:(void (^ _Nonnull)(NSArray<DisabledZone *> * _Nonnull))completion;
- (void)removeDisabledZoneById:(NSUUID * _Nonnull)id completion:(void (^ _Nonnull)(void))completion;
- (void)containsDisabledZoneWithId:(NSUUID * _Nonnull)id completion:(void (^ _Nonnull)(BOOL))completion;
- (void)saveWithSdkConfiguration:(PointSDKConfiguration * _Nonnull)sdkConfiguration completion:(void (^ _Nonnull)(void))completion;
- (void)getSDKConfigurationWithCompletion:(void (^ _Nonnull)(PointSDKConfiguration * _Nonnull))completion;
- (PointSDKConfiguration * _Nonnull)getSDKConfigurationSync SWIFT_WARN_UNUSED_RESULT;
- (void)removeSDKConfigurationWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)getAllZonesJustTriggeredWithCompletion:(void (^ _Nonnull)(NSArray<ZoneJustTriggered *> * _Nonnull))completion;
- (void)insertWithZoneJustTriggered:(BDZoneJustTriggered * _Nonnull)zone completion:(void (^ _Nonnull)(void))completion;
- (void)clearAllZonesJustTriggeredWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)removeZoneJustTriggeredById:(NSUUID * _Nonnull)id completion:(void (^ _Nonnull)(void))completion;
- (void)removeStaleLifecycleEventNotificationsWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)removeStaleTriggerEventNotificationsWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)removeStalePendingEventsWithCompletion:(void (^ _Nonnull)(void))completion;
- (NSError * _Nullable)clearCoreData;
@end


@class BDPoint;

/// A Destination is a physical location your customers arrive at to collect their mobile order – this is usually your store or restaurant. Also known as Stores within Canvas
SWIFT_CLASS("_TtC10BDPointSDK11Destination")
@interface Destination : NSObject
/// The destination id is used to identify the destination. This is used to trigger Tempo, send Wave events and link Zones to a destination.
@property (nonatomic, readonly, copy) NSString * _Nonnull destinationId;
/// The name of the destination.
@property (nonatomic, readonly, copy) NSString * _Nullable name;
/// The address of the destination.
@property (nonatomic, readonly, copy) NSString * _Nullable address;
/// A <code>BDPoint</code> that stores spatial geographic information (i.e longitude, latitude) of the destination
@property (nonatomic, readonly, strong) BDPoint * _Nonnull location;
/// :nodoc:
- (nonnull instancetype)initWithDestinationId:(NSString * _Nonnull)destinationId name:(NSString * _Nullable)name address:(NSString * _Nullable)address location:(BDPoint * _Nonnull)location OBJC_DESIGNATED_INITIALIZER;
/// :nodoc:
- (nonnull instancetype)initWithDestination:(Destination * _Nonnull)destination;
/// :nodoc:
- (nullable instancetype)initWithDictionary:(NSDictionary * _Nonnull)dictionary error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface Destination (SWIFT_EXTENSION(BDPointSDK)) <JsonString>
/// Convert to JSON string
/// This function throws an error if JSON encoding process fails
- (NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end



@interface Destination (SWIFT_EXTENSION(BDPointSDK)) <BDPJSONSerializable>
- (NSDictionary * _Nullable)dictionaryRepresentation SWIFT_WARN_UNUSED_RESULT;
@end


@interface Destination (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end

@class OperatingSystemInfo;

/// Details about the current device
SWIFT_CLASS("_TtC10BDPointSDK10DeviceInfo")
@interface DeviceInfo : NSObject
/// The device model. E.g. iPhone11,6
@property (nonatomic, readonly, copy) NSString * _Nonnull deviceType;
/// Operating system details
@property (nonatomic, readonly, strong) OperatingSystemInfo * _Nonnull osInfo;
/// The advertisingId of the device (aka IDFA). Nil if permission is not granted.
@property (nonatomic, readonly, copy) NSString * _Nullable advertisingId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface DeviceInfo (SWIFT_EXTENSION(BDPointSDK)) <JsonString>
/// Convert to JSON string
/// This function throws an error if JSON encoding process fails
- (NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


@interface DeviceInfo (SWIFT_EXTENSION(BDPointSDK))
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end



@interface DeviceInfo (SWIFT_EXTENSION(BDPointSDK)) <Persistable>
@property (nonatomic, readonly, copy) NSString * _Nonnull entityName;
@property (nonatomic, readonly, strong) NSPredicate * _Nonnull predicate;
- (NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, DisableBackgroundLocation, open) {
  DisableBackgroundLocationBd = 0,
  DisableBackgroundLocationNone = 1,
};


enum EventType : NSInteger;
enum TriggerEngine : NSInteger;

/// An event in Bluedot SDK. Could be a GeoTriggerEvent (e.g. <code>FenceEntered</code>, <code>FenceExited</code>), a TempoEvent or a LifecycleEvent
SWIFT_PROTOCOL("_TtP10BDPointSDK5Event_")
@protocol Event <NSObject>
/// Type of event
@property (nonatomic, readonly) enum EventType eventType;
/// Time when event occurred
@property (nonatomic, readonly, copy) NSDate * _Nonnull eventTime;
/// Local Timezone of the device when event happens
@property (nonatomic, readonly, copy) NSString * _Nonnull timeZoneIdentifier;
/// Trigger Engine mode of the PointSDK when event happens. Also see <code>TriggerEngine</code>.
@property (nonatomic, readonly) enum TriggerEngine triggerEngine;
/// Application-related detail when event happens
@property (nonatomic, readonly, strong) AppState * _Nonnull appState;
@end

/// Types of events from PointSDK
typedef SWIFT_ENUM(NSInteger, EventType, open) {
/// When device enters a <code>BDFence</code>
  EventTypeFenceEntered = 0,
/// When device exits a <code>BDFence</code>
  EventTypeFenceExited = 1,
/// When a <code>TempoUpdate</code> event happens
  EventTypeTempoUpdate = 2,
/// When a <code>TempoStop</code> event happens
  EventTypeTempoStop = 3,
/// When SDK initialize event happens
  EventTypeSdkInit = 4,
/// When SDK reset event happens
  EventTypeSdkReset = 5,
/// When GeoTriggering service start event happens
  EventTypeGeoTriggerStart = 6,
/// When GeoTriggering service stop event happens
  EventTypeGeoTriggerStop = 7,
};


/// A FenceEntered event is triggered when Zone entry conditions are met and an Entry trigger is to be registered in Canvas
SWIFT_CLASS("_TtC10BDPointSDK12FenceEntered")
@interface FenceEntered : NSObject
/// Type of this event. fenceEntered
@property (nonatomic, readonly) enum EventType eventType;
/// Date Time when the trigger event happened
@property (nonatomic, readonly, copy) NSDate * _Nonnull eventTime;
/// Name of the last crossed fence leading up to the trigger event
@property (nonatomic, readonly, copy) NSString * _Nonnull fenceName;
/// Unique Id of the last crossed fence leading up to the trigger event
@property (nonatomic, readonly, copy) NSUUID * _Nonnull fenceId;
/// The Location Update leading to the event
@property (nonatomic, readonly, copy) NSArray<CLLocation *> * _Nonnull locations;
/// Application-related detail
@property (nonatomic, readonly, strong) AppState * _Nonnull appState;
/// List of crossed fences leading to this Fence Entered event
@property (nonatomic, readonly, copy) NSArray<CrossedFence *> * _Nullable crossedFences;
/// Trigger Engine of the PointSDK when this trigger happens.
/// Available values: [bd, native].
/// <ul>
///   <li>
///     <code>bd</code> engine is the default engine running when app is running on background.
///   </li>
///   <li>
///     <code>native</code> engine utilizes the iOS native Geo Fencing when the app is not running.
///   </li>
/// </ul>
/// See <a href="https://docs.bluedot.io/ios-sdk/ios-features/ios-features-enhanced-sdk-restart/">our documentation</a> for more details:
@property (nonatomic, readonly) enum TriggerEngine triggerEngine;
/// Local Timezone of the device when the FenceEntered event happens
@property (nonatomic, readonly, copy) NSString * _Nonnull timeZoneIdentifier;
/// Unique ID of the FenceEntered event
@property (nonatomic, readonly, copy) NSUUID * _Nonnull uniqueId;
/// :nodoc:
- (nonnull instancetype)initWithFenceId:(NSUUID * _Nonnull)fenceId fenceName:(NSString * _Nonnull)fenceName eventTime:(NSDate * _Nonnull)eventTime locations:(NSArray<CLLocation *> * _Nonnull)locations appState:(AppState * _Nonnull)appState crossedFences:(NSArray<CrossedFence *> * _Nullable)crossedFences;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A GeoTrigger event, e.g. <code>FenceEntered</code>or <code>FenceExited</code>.
SWIFT_PROTOCOL("_TtP10BDPointSDK12TriggerEvent_")
@protocol TriggerEvent <Event, NSCopying>
/// Name of fence causing the trigger
@property (nonatomic, readonly, copy) NSString * _Nonnull fenceName;
/// Id of fence causing the trigger
@property (nonatomic, readonly, copy) NSUUID * _Nonnull fenceId;
/// Locations leading to the trigger event
@property (nonatomic, readonly, copy) NSArray<CLLocation *> * _Nonnull locations;
/// Unique Id of the event
@property (nonatomic, readonly, copy) NSUUID * _Nonnull uniqueId;
@end


@interface FenceEntered (SWIFT_EXTENSION(BDPointSDK)) <TriggerEvent>
@end



@interface FenceEntered (SWIFT_EXTENSION(BDPointSDK)) <JsonString>
/// Convert to JSON string
/// This function throws an error if JSON encoding process fails
- (NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


@interface FenceEntered (SWIFT_EXTENSION(BDPointSDK)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
@end


@interface FenceEntered (SWIFT_EXTENSION(BDPointSDK))
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


@interface FenceEntered (SWIFT_EXTENSION(BDPointSDK)) <Persistable>
@property (nonatomic, readonly, copy) NSString * _Nonnull entityName;
@property (nonatomic, readonly, strong) NSPredicate * _Nonnull predicate;
- (NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
@end


/// A FenceExited event is triggered when the device leaves a zone and an Exit trigger is to be registered in Canvas
SWIFT_CLASS("_TtC10BDPointSDK11FenceExited")
@interface FenceExited : NSObject
/// Type of this event. fenceExited
@property (nonatomic, readonly) enum EventType eventType;
/// Date Time when the trigger event happened
@property (nonatomic, readonly, copy) NSDate * _Nonnull eventTime;
/// Name of the last crossed fence leading up to the trigger event
@property (nonatomic, readonly, copy) NSString * _Nonnull fenceName;
/// Unique Id of the last crossed fence leading up to the trigger event
@property (nonatomic, readonly, copy) NSUUID * _Nonnull fenceId;
/// The Location Update leading to the event
@property (nonatomic, readonly, copy) NSArray<CLLocation *> * _Nonnull locations;
/// Application-related detail
@property (nonatomic, readonly, strong) AppState * _Nonnull appState;
/// Trigger Engine of the PointSDK when this trigger happens.
/// Available values: [bd, native].
/// <ul>
///   <li>
///     <code>bd</code> engine is the default engine running when app is running on background.
///   </li>
///   <li>
///     <code>native</code> engine utilizes the iOS native Geo Fencing when the app is not running.
///   </li>
/// </ul>
/// See <a href="https://docs.bluedot.io/ios-sdk/ios-features/ios-features-enhanced-sdk-restart/">our documentation</a> for more details:
@property (nonatomic, readonly) enum TriggerEngine triggerEngine;
/// Distance from the last Location causing the exit event to the Zone, in meters.
@property (nonatomic, readonly) float distance;
/// Distance required from the zone to trigger an exit event, in meters.
@property (nonatomic, readonly) float distanceRequired;
/// Dwell time from entry to exit, in milliseconds
@property (nonatomic, readonly) NSTimeInterval dwellTime;
/// Local Timezone of the device when the FenceEntered event happens
@property (nonatomic, readonly, copy) NSString * _Nonnull timeZoneIdentifier;
/// Unique ID of the FenceEntered event
@property (nonatomic, readonly, copy) NSUUID * _Nonnull uniqueId;
/// :nodoc:
- (nonnull instancetype)initWithFenceId:(NSUUID * _Nonnull)fenceId fenceName:(NSString * _Nonnull)fenceName eventTime:(NSDate * _Nonnull)eventTime locations:(NSArray<CLLocation *> * _Nonnull)locations dwellTime:(NSTimeInterval)dwellTime distance:(float)distance distanceRequired:(float)distanceRequired appState:(AppState * _Nonnull)appState;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface FenceExited (SWIFT_EXTENSION(BDPointSDK)) <Checkout, TriggerEvent>
@end


@interface FenceExited (SWIFT_EXTENSION(BDPointSDK)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
@end


@interface FenceExited (SWIFT_EXTENSION(BDPointSDK)) <JsonString>
/// Convert to JSON string
/// This function throws an error if JSON encoding process fails
- (NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end



@interface FenceExited (SWIFT_EXTENSION(BDPointSDK))
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


@interface FenceExited (SWIFT_EXTENSION(BDPointSDK)) <Persistable>
@property (nonatomic, readonly, copy) NSString * _Nonnull entityName;
@property (nonatomic, readonly, strong) NSPredicate * _Nonnull predicate;
- (NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
@end


enum NotificationType : NSInteger;
@class ZoneInfo;

/// An event triggered by GeoTriggering service when a trigger (zone entry or exit) happens.
/// This event is being sent to application via <code>BDPGeoTriggeringEventDelegate.didEnterZone(_:)</code>
/// and <code>BDPGeoTriggeringEventDelegate.didExitZone(_:)</code>.
SWIFT_CLASS("_TtC10BDPointSDK15GeoTriggerEvent")
@interface GeoTriggerEvent : NSObject
/// The installation reference of this Point SDK enabled App. Same as <code>BDLocationManager/installRef</code>
@property (nonatomic, readonly, copy) NSUUID * _Nonnull installRef;
/// The projectId SDK initialized with
@property (nonatomic, readonly, copy) NSString * _Nonnull projectId;
/// Device infomation e.g. model, os, advertisingId (IDFA)
@property (nonatomic, readonly, strong) DeviceInfo * _Nonnull deviceInfo;
/// The unique ID of the trigger chain.
/// A trigger chain includes an Entry event (if zone setting in Canvas is Exit-disabled), or a pair of Entry and Exit events (if zone setting in Canvas is Exit-enabled)
@property (nonatomic, readonly, copy) NSUUID * _Nonnull triggerChainId;
/// Notification Type of this event. For GeoTriggerEvent events, can be either <code>NotificationType/entry</code> or <code>NotificationType/exit</code>
@property (nonatomic, readonly) enum NotificationType notificationType;
/// Details of the zone triggering the event
@property (nonatomic, readonly, strong) ZoneInfo * _Nonnull zoneInfo;
/// Application-related detail. Note that the PointSDK’s <code>customEventMetaData</code> is included in this <code>appInfo</code>
@property (nonatomic, readonly, strong) AppInfo * _Nonnull appInfo;
/// A list of trigger events included in this GeoTriggerEvent.
/// <ul>
///   <li>
///     An entry event will include only 1 item of type <code>FenceEntered</code>.
///   </li>
///   <li>
///     An exit event will include 2 items: the <code>FenceEntered</code> event and the <code>FenceExited</code> event linking to the same zone.
///   </li>
/// </ul>
@property (nonatomic, readonly, copy) NSArray<id <TriggerEvent>> * _Nonnull triggerEvents;
/// A <code>FenceEntered</code> event causing the zone entry trigger, same as the first event in <code>triggerEvents</code>.
/// For exit trigger event, this returns the <code>FenceEntered</code> event linked to the <code>FenceExited</code> in the same <code>triggerChainId</code>
@property (nonatomic, readonly, strong) FenceEntered * _Nullable entryEvent;
/// A <code>FenceExited</code> event causing the zone exit trigger, same as the last event in <code>triggerEvents</code>.
/// <code>nil</code> if this GeoTriggerEvent is an entry event.
@property (nonatomic, readonly, strong) FenceExited * _Nullable exitEvent;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface GeoTriggerEvent (SWIFT_EXTENSION(BDPointSDK)) <JsonString>
/// Convert to JSON string
/// This function throws an error if JSON encoding process fails
- (NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


@class TriggerEventNotification;

@interface GeoTriggerEvent (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)initWithEventNotification:(TriggerEventNotification * _Nonnull)eventNotification;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP10BDPointSDK14LifecycleEvent_")
@protocol LifecycleEvent <Event>
@property (nonatomic, readonly, copy) NSUUID * _Nonnull uniqueId;
@end


SWIFT_CLASS("_TtC10BDPointSDK15GeoTriggerStart")
@interface GeoTriggerStart : NSObject <LifecycleEvent>
@property (nonatomic, readonly) enum EventType eventType;
@property (nonatomic, copy) NSDate * _Nonnull eventTime;
@property (nonatomic, copy) NSString * _Nonnull timeZoneIdentifier;
@property (nonatomic) enum TriggerEngine triggerEngine;
@property (nonatomic, strong) AppState * _Nonnull appState;
@property (nonatomic, copy) NSUUID * _Nonnull uniqueId;
- (nonnull instancetype)initWithAppState:(AppState * _Nonnull)appState;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface GeoTriggerStart (SWIFT_EXTENSION(BDPointSDK))
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


@interface GeoTriggerStart (SWIFT_EXTENSION(BDPointSDK)) <Persistable>
@property (nonatomic, readonly, copy) NSString * _Nonnull entityName;
@property (nonatomic, readonly, strong) NSPredicate * _Nonnull predicate;
- (NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC10BDPointSDK14GeoTriggerStop")
@interface GeoTriggerStop : NSObject <LifecycleEvent>
@property (nonatomic, readonly) enum EventType eventType;
@property (nonatomic, copy) NSDate * _Nonnull eventTime;
@property (nonatomic, copy) NSString * _Nonnull timeZoneIdentifier;
@property (nonatomic) enum TriggerEngine triggerEngine;
@property (nonatomic, strong) AppState * _Nonnull appState;
@property (nonatomic, copy) NSUUID * _Nonnull uniqueId;
- (nonnull instancetype)initWithAppState:(AppState * _Nonnull)appState;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface GeoTriggerStop (SWIFT_EXTENSION(BDPointSDK))
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


@interface GeoTriggerStop (SWIFT_EXTENSION(BDPointSDK)) <Persistable>
@property (nonatomic, readonly, copy) NSString * _Nonnull entityName;
@property (nonatomic, readonly, strong) NSPredicate * _Nonnull predicate;
- (NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC10BDPointSDK28HeartbeatRemoteConfiguration")
@interface HeartbeatRemoteConfiguration : NSObject
@property (nonatomic, readonly) NSTimeInterval heartbeatInterval;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


enum KeychainKeys : NSInteger;

SWIFT_CLASS("_TtC10BDPointSDK8Keychain")
@interface Keychain : NSObject
- (NSString * _Nullable)getForKey:(enum KeychainKeys)key SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setWithValue:(NSString * _Nonnull)value forKey:(enum KeychainKeys)key SWIFT_WARN_UNUSED_RESULT;
- (BOOL)deleteForKey:(enum KeychainKeys)key SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, KeychainKeys, open) {
  KeychainKeysApi = 0,
  KeychainKeysUrl = 1,
  KeychainKeysPointApiUrl = 2,
  KeychainKeysInstallRef = 3,
};



SWIFT_CLASS("_TtC10BDPointSDK26LifecycleEventNotification")
@interface LifecycleEventNotification : NSObject
- (nonnull instancetype)initWithLifecycleEvents:(NSArray<id <LifecycleEvent>> * _Nonnull)lifecycleEvents;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface LifecycleEventNotification (SWIFT_EXTENSION(BDPointSDK))
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@class MOLifecycleEventNotification;

@interface LifecycleEventNotification (SWIFT_EXTENSION(BDPointSDK)) <Persistable>
@property (nonatomic, readonly, copy) NSString * _Nonnull entityName;
@property (nonatomic, readonly, strong) NSPredicate * _Nonnull predicate;
- (nonnull instancetype)initWithManagedObject:(MOLifecycleEventNotification * _Nonnull)notification;
- (NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC10BDPointSDK14LocationSensor")
@interface LocationSensor : NSObject
- (NSArray<CLLocation *> * _Nonnull)onLocationUpdates:(NSArray<CLLocation *> * _Nonnull)locations SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@protocol Logger;

SWIFT_CLASS("_TtC10BDPointSDK10LogFactory")
@interface LogFactory : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull BDLogFileCSVDefaultKey;)
+ (NSString * _Nonnull)BDLogFileCSVDefaultKey SWIFT_WARN_UNUSED_RESULT;
+ (id <Logger> _Nonnull)create:(NSString * _Nonnull)scope SWIFT_WARN_UNUSED_RESULT;
+ (void)installGlobalErrorHandlers;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, LogLevel, open) {
  LogLevelDebug = 0,
  LogLevelInfo = 1,
  LogLevelNotice = 2,
  LogLevelWarn = 3,
  LogLevelError = 4,
  LogLevelCritical = 5,
};

@class NSNumber;

SWIFT_PROTOCOL("_TtP10BDPointSDK6Logger_")
@protocol Logger
- (void)debug:(NSString * _Nonnull)message;
- (void)info:(NSString * _Nonnull)message;
- (void)notice:(NSString * _Nonnull)message;
- (void)warn:(NSString * _Nonnull)message error:(NSError * _Nullable)error;
- (void)error:(NSString * _Nonnull)message error:(NSError * _Nullable)error method:(NSString * _Nullable)method lineNumber:(NSNumber * _Nullable)lineNumber;
- (void)critical:(NSString * _Nonnull)message error:(NSError * _Nullable)error method:(NSString * _Nullable)method lineNumber:(NSNumber * _Nullable)lineNumber;
- (void)logWithLevel:(enum LogLevel)level message:(NSString * _Nonnull)message error:(NSError * _Nullable)error method:(NSString * _Nullable)method lineNumber:(NSNumber * _Nullable)lineNumber stacktrace:(NSArray<NSString *> * _Nullable)stacktrace;
@end

@class NSEntityDescription;

SWIFT_CLASS("_TtC10BDPointSDK9MOAppInfo")
@interface MOAppInfo : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class MOTriggerEventNotification;

@interface MOAppInfo (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic, copy) NSString * _Nullable appBuildVersion;
@property (nonatomic, copy) NSString * _Nullable customerApplicationId;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable customEventMetaData;
@property (nonatomic, copy) NSString * _Nullable minimumOSVersion;
@property (nonatomic, copy) NSString * _Nullable sdkVersion;
@property (nonatomic, copy) NSString * _Nullable uniqueIdString;
@property (nonatomic, strong) MOLifecycleEventNotification * _Nullable lifecycleEventNotification;
@property (nonatomic, strong) MOTriggerEventNotification * _Nullable triggerEventNotification;
@end


SWIFT_CLASS("_TtC10BDPointSDK10MOAppState")
@interface MOAppState : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class NSDecimalNumber;
@class MOLifecycleEventAbstract;
@class MOTriggerEventAbstract;

@interface MOAppState (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic, strong) NSDecimalNumber * _Nullable batteryLevel;
@property (nonatomic) BOOL blueBarEnabled;
@property (nonatomic, copy) NSDate * _Nullable lastRuleDownload;
@property (nonatomic, copy) NSString * _Nullable locationPermission;
@property (nonatomic, copy) NSString * _Nullable notificationPermission;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable osRestrictions;
@property (nonatomic, copy) NSString * _Nullable uniqueIdString;
@property (nonatomic, copy) NSString * _Nullable viewState;
@property (nonatomic, strong) MOLifecycleEventAbstract * _Nullable lifecycleEvent;
@property (nonatomic, strong) MOTriggerEventAbstract * _Nullable triggerEventAbstract;
@end


SWIFT_CLASS("_TtC10BDPointSDK14MOCrossedFence")
@interface MOCrossedFence : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class MOFenceEntered;

@interface MOCrossedFence (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic, copy) NSDate * _Nullable crossTime;
@property (nonatomic, copy) NSString * _Nullable fenceId;
@property (nonatomic, copy) NSString * _Nullable fenceName;
@property (nonatomic, strong) CLLocation * _Nullable location;
@property (nonatomic, strong) MOFenceEntered * _Nullable crossedFences;
@end


SWIFT_CLASS("_TtC10BDPointSDK12MODeviceInfo")
@interface MODeviceInfo : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface MODeviceInfo (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic, copy) NSString * _Nullable advertisingId;
@property (nonatomic, copy) NSString * _Nullable os;
@property (nonatomic, copy) NSString * _Nullable osVersion;
@property (nonatomic, copy) NSString * _Nullable uniqueIdString;
@property (nonatomic, strong) MOLifecycleEventNotification * _Nullable lifecycleEventNotification;
@property (nonatomic, strong) MOTriggerEventNotification * _Nullable notification;
@end


SWIFT_CLASS("_TtC10BDPointSDK22MOTriggerEventAbstract")
@interface MOTriggerEventAbstract : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10BDPointSDK14MOFenceEntered")
@interface MOFenceEntered : MOTriggerEventAbstract
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class NSOrderedSet;

@interface MOFenceEntered (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic, strong) NSOrderedSet * _Nullable crossedFences;
@end

@class NSIndexSet;

@interface MOFenceEntered (SWIFT_EXTENSION(BDPointSDK))
- (void)insertObject:(MOCrossedFence * _Nonnull)value inCrossedFencesAtIndex:(NSInteger)idx;
- (void)removeObjectFromCrossedFencesAtIndex:(NSInteger)idx;
- (void)insertCrossedFences:(NSArray<MOCrossedFence *> * _Nonnull)values atIndexes:(NSIndexSet * _Nonnull)indexes;
- (void)removeCrossedFencesAtIndexes:(NSIndexSet * _Nonnull)indexes;
- (void)replaceObjectInCrossedFencesAtIndex:(NSInteger)idx withObject:(MOCrossedFence * _Nonnull)value;
- (void)replaceCrossedFencesAtIndexes:(NSIndexSet * _Nonnull)indexes withCrossedFences:(NSArray<MOCrossedFence *> * _Nonnull)values;
- (void)addCrossedFencesObject:(MOCrossedFence * _Nonnull)value;
- (void)removeCrossedFencesObject:(MOCrossedFence * _Nonnull)value;
- (void)addCrossedFences:(NSOrderedSet * _Nonnull)values;
- (void)removeCrossedFences:(NSOrderedSet * _Nonnull)values;
@end


SWIFT_CLASS("_TtC10BDPointSDK13MOFenceExited")
@interface MOFenceExited : MOTriggerEventAbstract
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface MOFenceExited (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic) float distance;
@property (nonatomic) float distanceRequired;
@property (nonatomic) double dwellTime;
@end


SWIFT_CLASS_NAMED("MOLifecycleEventAbstract")
@interface MOLifecycleEventAbstract : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10BDPointSDK17MOGeoTriggerStart")
@interface MOGeoTriggerStart : MOLifecycleEventAbstract
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC10BDPointSDK16MOGeoTriggerStop")
@interface MOGeoTriggerStop : MOLifecycleEventAbstract
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@interface MOLifecycleEventAbstract (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic, copy) NSDate * _Nullable eventTime;
@property (nonatomic, copy) NSString * _Nullable timeZoneIdentifier;
@property (nonatomic, copy) NSString * _Nullable triggerEngine;
@property (nonatomic, copy) NSString * _Nullable uniqueIdString;
@property (nonatomic, strong) MOAppState * _Nullable appState;
@property (nonatomic, strong) MOLifecycleEventNotification * _Nullable lifecycleEventNotification;
@end


SWIFT_CLASS_NAMED("MOLifecycleEventNotification")
@interface MOLifecycleEventNotification : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface MOLifecycleEventNotification (SWIFT_EXTENSION(BDPointSDK))
- (void)insertObject:(MOLifecycleEventAbstract * _Nonnull)value inLifecycleEventsAtIndex:(NSInteger)idx;
- (void)removeObjectFromLifecycleEventsAtIndex:(NSInteger)idx;
- (void)insertLifecycleEvents:(NSArray<MOLifecycleEventAbstract *> * _Nonnull)values atIndexes:(NSIndexSet * _Nonnull)indexes;
- (void)removeLifecycleEventsAtIndexes:(NSIndexSet * _Nonnull)indexes;
- (void)replaceObjectInLifecycleEventsAtIndex:(NSInteger)idx withObject:(MOLifecycleEventAbstract * _Nonnull)value;
- (void)replaceLifecycleEventsAtIndexes:(NSIndexSet * _Nonnull)indexes withLifecycleEvents:(NSArray<MOLifecycleEventAbstract *> * _Nonnull)values;
- (void)addLifecycleEventsObject:(MOLifecycleEventAbstract * _Nonnull)value;
- (void)removeLifecycleEventsObject:(MOLifecycleEventAbstract * _Nonnull)value;
- (void)addLifecycleEvents:(NSOrderedSet * _Nonnull)values;
- (void)removeLifecycleEvents:(NSOrderedSet * _Nonnull)values;
@end


@interface MOLifecycleEventNotification (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic, copy) NSString * _Nullable installRefString;
@property (nonatomic, copy) NSString * _Nullable projectId;
@property (nonatomic) int16_t retryCount;
@property (nonatomic, copy) NSString * _Nullable uniqueIdString;
@property (nonatomic, strong) MOAppInfo * _Nullable appInfo;
@property (nonatomic, strong) MODeviceInfo * _Nullable deviceInfo;
@property (nonatomic, strong) NSOrderedSet * _Nullable lifecycleEvents;
@end


SWIFT_CLASS_NAMED("MOPendingEvent")
@interface MOPendingEvent : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@protocol BDPSpatialObjectInfo;
@class MOZoneInfo;

@interface MOPendingEvent (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic, strong) id <BDPSpatialObjectInfo> _Nullable spatialObject;
@property (nonatomic, copy) NSString * _Nullable triggerChainIdString;
@property (nonatomic, strong) NSOrderedSet * _Nullable triggerEvents;
@property (nonatomic, strong) MOZoneInfo * _Nullable zoneInfo;
@end


@interface MOPendingEvent (SWIFT_EXTENSION(BDPointSDK))
- (void)insertObject:(MOTriggerEventAbstract * _Nonnull)value inTriggerEventsAtIndex:(NSInteger)idx;
- (void)removeObjectFromTriggerEventsAtIndex:(NSInteger)idx;
- (void)insertTriggerEvents:(NSArray<MOTriggerEventAbstract *> * _Nonnull)values atIndexes:(NSIndexSet * _Nonnull)indexes;
- (void)removeTriggerEventsAtIndexes:(NSIndexSet * _Nonnull)indexes;
- (void)replaceObjectInTriggerEventsAtIndex:(NSInteger)idx withObject:(MOTriggerEventAbstract * _Nonnull)value;
- (void)replaceTriggerEventsAtIndexes:(NSIndexSet * _Nonnull)indexes withTriggerEvents:(NSArray<MOTriggerEventAbstract *> * _Nonnull)values;
- (void)addTriggerEventsObject:(MOTriggerEventAbstract * _Nonnull)value;
- (void)removeTriggerEventsObject:(MOTriggerEventAbstract * _Nonnull)value;
- (void)addTriggerEvents:(NSOrderedSet * _Nonnull)values;
- (void)removeTriggerEvents:(NSOrderedSet * _Nonnull)values;
@end


SWIFT_CLASS("_TtC10BDPointSDK9MOSdkInit")
@interface MOSdkInit : MOLifecycleEventAbstract
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC10BDPointSDK10MOSdkReset")
@interface MOSdkReset : MOLifecycleEventAbstract
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@interface MOTriggerEventAbstract (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic, copy) NSDate * _Nullable eventTime;
@property (nonatomic, copy) NSString * _Nullable fenceIdString;
@property (nonatomic, copy) NSString * _Nullable fenceName;
@property (nonatomic, copy) NSArray<CLLocation *> * _Nullable locations;
@property (nonatomic, copy) NSString * _Nullable timeZoneIdentifier;
@property (nonatomic, copy) NSString * _Nullable triggerEngine;
@property (nonatomic, copy) NSString * _Nullable uniqueIdString;
@property (nonatomic, strong) MOAppState * _Nullable appState;
@property (nonatomic, strong) MOPendingEvent * _Nullable pendingEvent;
@property (nonatomic, strong) MOTriggerEventNotification * _Nullable triggerEventNotification;
@end


SWIFT_CLASS("_TtC10BDPointSDK26MOTriggerEventNotification")
@interface MOTriggerEventNotification : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface MOTriggerEventNotification (SWIFT_EXTENSION(BDPointSDK))
- (void)insertObject:(MOTriggerEventAbstract * _Nonnull)value inTriggerEventsAtIndex:(NSInteger)idx;
- (void)removeObjectFromTriggerEventsAtIndex:(NSInteger)idx;
- (void)insertTriggerEvents:(NSArray<MOTriggerEventAbstract *> * _Nonnull)values atIndexes:(NSIndexSet * _Nonnull)indexes;
- (void)removeTriggerEventsAtIndexes:(NSIndexSet * _Nonnull)indexes;
- (void)replaceObjectInTriggerEventsAtIndex:(NSInteger)idx withObject:(MOTriggerEventAbstract * _Nonnull)value;
- (void)replaceTriggerEventsAtIndexes:(NSIndexSet * _Nonnull)indexes withTriggerEvents:(NSArray<MOTriggerEventAbstract *> * _Nonnull)values;
- (void)addTriggerEventsObject:(MOTriggerEventAbstract * _Nonnull)value;
- (void)removeTriggerEventsObject:(MOTriggerEventAbstract * _Nonnull)value;
- (void)addTriggerEvents:(NSOrderedSet * _Nonnull)values;
- (void)removeTriggerEvents:(NSOrderedSet * _Nonnull)values;
@end


@interface MOTriggerEventNotification (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic, copy) NSString * _Nullable installRefString;
@property (nonatomic, copy) NSString * _Nullable notificationTypeString;
@property (nonatomic, copy) NSString * _Nullable projectId;
@property (nonatomic) int16_t retryCount;
@property (nonatomic, copy) NSString * _Nullable triggerChainIdString;
@property (nonatomic, strong) MOAppInfo * _Nullable appInfo;
@property (nonatomic, strong) MODeviceInfo * _Nullable deviceInfo;
@property (nonatomic, strong) NSOrderedSet * _Nullable triggerEvents;
@property (nonatomic, strong) MOZoneInfo * _Nullable zoneInfo;
@end


SWIFT_CLASS("_TtC10BDPointSDK10MOZoneInfo")
@interface MOZoneInfo : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface MOZoneInfo (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable customData;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable uniqueIdString;
@property (nonatomic, copy) NSString * _Nullable zoneInfoIdString;
@property (nonatomic, strong) MOPendingEvent * _Nullable pendingEvent;
@property (nonatomic, strong) MOTriggerEventNotification * _Nullable triggerEventNotification;
@end


@interface NSManagedObjectContext (SWIFT_EXTENSION(BDPointSDK))
- (void)insertManagable:(id <Persistable> _Nonnull)object;
@end



/// Type of Notification triggered by PointSDK
typedef SWIFT_ENUM(NSInteger, NotificationType, open) {
/// GeoTrigger entry when device enters a zone
  NotificationTypeEntry = 0,
/// GeoTrigger exit when device exits a zone
  NotificationTypeExit = 1,
/// Tempo event
  NotificationTypeTempo = 2,
/// SDK Lifecycle event
  NotificationTypeLifecycle = 3,
/// Other unknown cases
  NotificationTypeUnknown = 4,
};

@class NSURL;

SWIFT_CLASS("_TtC10BDPointSDK22ObjcRainbowAPITriggers")
@interface ObjcRainbowAPITriggers : NSObject
- (nonnull instancetype)initWithEndpoint:(NSURL * _Nonnull)endpoint OBJC_DESIGNATED_INITIALIZER;
- (void)postWithNotification:(TriggerEventNotification * _Nonnull)notification success:(void (^ _Nonnull)(void))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// OS related details
SWIFT_CLASS("_TtC10BDPointSDK19OperatingSystemInfo")
@interface OperatingSystemInfo : NSObject
/// Operating System name, e.g. “iOS”
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
/// OS version, e.g. “16.0.0”
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface OperatingSystemInfo (SWIFT_EXTENSION(BDPointSDK))
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC10BDPointSDK12PendingEvent")
@interface PendingEvent : NSObject
@property (nonatomic, strong) ZoneInfo * _Nonnull zoneInfo;
@property (nonatomic, copy) NSArray<id <TriggerEvent>> * _Nonnull triggerEvents;
@property (nonatomic, copy) NSUUID * _Nonnull triggerChainId;
@property (nonatomic, strong) id <BDPSpatialObjectInfo> _Nonnull spatialObject;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSUUID * _Nonnull id;
@property (nonatomic, readonly, copy) NSDate * _Nonnull entryTimestamp;
- (nullable instancetype)initWithTriggerChainId:(NSUUID * _Nonnull)triggerChainId triggerEvents:(NSArray<id <TriggerEvent>> * _Nonnull)triggerEvents spatialObject:(id <BDPSpatialObjectInfo> _Nonnull)spatialObject zoneInfo:(ZoneInfo * _Nonnull)zoneInfo error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface PendingEvent (SWIFT_EXTENSION(BDPointSDK))
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


@interface PendingEvent (SWIFT_EXTENSION(BDPointSDK)) <Persistable>
@property (nonatomic, readonly, copy) NSString * _Nonnull entityName;
@property (nonatomic, readonly, strong) NSPredicate * _Nonnull predicate;
- (nullable instancetype)initWithManagedObject:(MOPendingEvent * _Nonnull)event error:(NSError * _Nullable * _Nullable)error;
- (NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
@end


enum SqliteURL : NSInteger;
@class NSPersistentStore;

SWIFT_CLASS("_TtC10BDPointSDK23PersistantStoreMigrator")
@interface PersistantStoreMigrator : NSObject
- (nonnull instancetype)initWithContainer:(NSPersistentContainer * _Nonnull)container OBJC_DESIGNATED_INITIALIZER;
- (NSURL * _Nonnull)folderURLFrom:(enum SqliteURL)enum_ SWIFT_WARN_UNUSED_RESULT;
- (void)migrateWithStore:(NSPersistentStore * _Nonnull)store toFolder:(NSURL * _Nonnull)newFolder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class BDRulesRequest;
@class BDRuleSet;

/// This class mainly exists to provide a convenience wrapper for PointAPI access from ObjC, and should be removed when
/// PointAPI is completed ported to Swift.
SWIFT_CLASS("_TtC10BDPointSDK9PointAPIs")
@interface PointAPIs : NSObject
+ (void)refreshGlobalConfigWithProjectId:(NSString * _Nonnull)projectId completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// Get Remote Config with no retry
+ (void)getRemoteConfigWithProjectId:(NSString * _Nonnull)projectId completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
+ (void)fetchRuleSetWithRulesRequest:(BDRulesRequest * _Nonnull)rulesRequest completion:(void (^ _Nonnull)(BDRuleSet * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10BDPointSDK21PointSDKConfiguration")
@interface PointSDKConfiguration : NSObject
@property (nonatomic, copy) NSURL * _Nonnull endpointURL;
@property (nonatomic) enum TriggerEngine triggerEngine;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum UseCaseType : NSInteger;

SWIFT_CLASS("_TtC10BDPointSDK17PointSDKConstants")
@interface PointSDKConstants : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull bluedotRegionMonitoringPrefix;)
+ (NSString * _Nonnull)bluedotRegionMonitoringPrefix SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull bluedotDeviceExitRegionIdentifier;)
+ (NSString * _Nonnull)bluedotDeviceExitRegionIdentifier SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull bluedotFarthestExitRegionIdentifier;)
+ (NSString * _Nonnull)bluedotFarthestExitRegionIdentifier SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) int32_t defaultMaxMonitoringRegions;)
+ (int32_t)defaultMaxMonitoringRegions SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultDeviceExitRegionRadius;)
+ (double)defaultDeviceExitRegionRadius SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultRefreshFarthestExitMinimumDistanceMoved;)
+ (double)defaultRefreshFarthestExitMinimumDistanceMoved SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull triggerEngineBD;)
+ (NSString * _Nonnull)triggerEngineBD SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull triggerEngineHybrid;)
+ (NSString * _Nonnull)triggerEngineHybrid SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull triggerEngineNative;)
+ (NSString * _Nonnull)triggerEngineNative SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull disableBackgroundLocationNone;)
+ (NSString * _Nonnull)disableBackgroundLocationNone SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull disableBackgroundLocationBD;)
+ (NSString * _Nonnull)disableBackgroundLocationBD SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull useCaseTypeDefault;)
+ (NSString * _Nonnull)useCaseTypeDefault SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull useCaseTypeRetail;)
+ (NSString * _Nonnull)useCaseTypeRetail SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull defaultGlobalUrl;)
+ (NSString * _Nonnull)defaultGlobalUrl SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultAccuracyModifierFocalDistanceCoefficient;)
+ (double)defaultAccuracyModifierFocalDistanceCoefficient SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultFenceTrackerWifiAccuracyTriggerThreshold;)
+ (double)defaultFenceTrackerWifiAccuracyTriggerThreshold SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultFenceTrackerGpsAccuracyTriggerThreshold;)
+ (double)defaultFenceTrackerGpsAccuracyTriggerThreshold SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultFenceTrackerGpsAccuracyTrackingThreshold;)
+ (double)defaultFenceTrackerGpsAccuracyTrackingThreshold SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultFenceTrackerCheckoutDistance;)
+ (double)defaultFenceTrackerCheckoutDistance SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultFenceTrackerSignificantMovementThreshold;)
+ (double)defaultFenceTrackerSignificantMovementThreshold SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultFenceTrackerFocusedFenceReevaluationDistance;)
+ (double)defaultFenceTrackerFocusedFenceReevaluationDistance SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultFenceTrackerHittingReevaluationDistance;)
+ (double)defaultFenceTrackerHittingReevaluationDistance SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultFenceTrackerMinAccuracyRequiredForHighAccuracyFence;)
+ (double)defaultFenceTrackerMinAccuracyRequiredForHighAccuracyFence SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultFenceTrackerHighAccuracyFenceSizeThreshold;)
+ (double)defaultFenceTrackerHighAccuracyFenceSizeThreshold SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultNativeFenceTrackerCheckinAccuracyThreshold;)
+ (double)defaultNativeFenceTrackerCheckinAccuracyThreshold SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultNativeFenceTrackerCheckoutDistance;)
+ (double)defaultNativeFenceTrackerCheckoutDistance SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultNativeFenceTrackerMinLocationUpdateInterval;)
+ (double)defaultNativeFenceTrackerMinLocationUpdateInterval SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL defaultLocationInputFilteringEnabled;)
+ (BOOL)defaultLocationInputFilteringEnabled SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull defaultEndpointUrl;)
+ (NSString * _Nonnull)defaultEndpointUrl SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull defaultPageUrl;)
+ (NSURL * _Nonnull)defaultPageUrl SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL defaultPeriodicPollingEnabled;)
+ (BOOL)defaultPeriodicPollingEnabled SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultPeriodicPollingLocationBasicTriggerThreshold;)
+ (double)defaultPeriodicPollingLocationBasicTriggerThreshold SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultPeriodicPollingLocationFurtherTriggerThreshold;)
+ (double)defaultPeriodicPollingLocationFurtherTriggerThreshold SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultPeriodicPollingLocationFarthestTriggerThreshold;)
+ (double)defaultPeriodicPollingLocationFarthestTriggerThreshold SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) enum UseCaseType defaultUseCaseType;)
+ (enum UseCaseType)defaultUseCaseType SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL defaultApplicationLoggingEnabled;)
+ (BOOL)defaultApplicationLoggingEnabled SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger defaultMaximumPageSize;)
+ (NSInteger)defaultMaximumPageSize SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull defaultTriggerEngine;)
+ (NSString * _Nonnull)defaultTriggerEngine SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) enum DisableBackgroundLocation defaultDisableBackgroundLocation;)
+ (enum DisableBackgroundLocation)defaultDisableBackgroundLocation SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL defaultAccuracySuppressionEnabled;)
+ (BOOL)defaultAccuracySuppressionEnabled SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultAccuracySuppressionGracePeriod;)
+ (double)defaultAccuracySuppressionGracePeriod SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultAccuracySuppressionMaxAccuracy;)
+ (double)defaultAccuracySuppressionMaxAccuracy SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultAccuracySuppressionMaxAccuracyTimeInterval;)
+ (double)defaultAccuracySuppressionMaxAccuracyTimeInterval SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultAccuracySuppressionMinAccuracy;)
+ (double)defaultAccuracySuppressionMinAccuracy SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultAccuracySuppressionMinAccuracyTimeInterval;)
+ (double)defaultAccuracySuppressionMinAccuracyTimeInterval SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL defaultStarvationDetectorEnabled;)
+ (BOOL)defaultStarvationDetectorEnabled SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultStarvationDetectorSecsAllowedPerMetre;)
+ (double)defaultStarvationDetectorSecsAllowedPerMetre SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultStarvationDetectorMinAllowedStarvationTimeInterval;)
+ (double)defaultStarvationDetectorMinAllowedStarvationTimeInterval SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger defaultDaysToRetentNotification;)
+ (NSInteger)defaultDaysToRetentNotification SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultTempoUpdateInterval;)
+ (double)defaultTempoUpdateInterval SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double defaultTempoTimeoutPeriod;)
+ (double)defaultTempoTimeoutPeriod SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum SDKApplicationState : NSInteger;
@class RemoteConfiguration;

/// Centralised context for both ObjC and Swift for static and dynamic config
SWIFT_CLASS("_TtC10BDPointSDK15PointSDKContext")
@interface PointSDKContext : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) PointSDKContext * _Nonnull shared;)
+ (PointSDKContext * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(PointSDKContext * _Nonnull)value;
@property (nonatomic, copy) NSString * _Nullable applicationId;
@property (nonatomic, copy) NSString * _Nonnull sdkVersion;
@property (nonatomic, copy) NSString * _Nonnull sdkType;
@property (nonatomic, copy) NSString * _Nullable sdkBuild;
@property (nonatomic, copy) NSUUID * _Nonnull installRef;
@property (nonatomic, copy) NSString * _Nonnull deviceType;
@property (nonatomic, copy) NSString * _Nonnull globalUrl;
@property (nonatomic) enum TriggerEngine triggerEngine;
@property (nonatomic, copy) NSURL * _Nullable notificationUrl;
@property (nonatomic, copy) NSURL * _Nullable tempoNotificationUrl;
@property (nonatomic, strong) AppRestartNotificationConfiguration * _Nonnull appRestartNotificationConfiguration;
@property (nonatomic) enum SDKApplicationState applicationState;
@property (nonatomic, strong) RemoteConfiguration * _Nonnull configuration;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Persister to save and load from the device Project info: GlobalConfig, RemoteConfig, RuleSet. Each data comes with its expiry date.
/// When loading data, due to the nature of the business logic, it’s not often that these data get updated, so cached data if available will be used, and send request to the server if needed (cache expired)
/// How data persistence works:
/// - Before sending requests (GlobalConfig, RemoteConfig, RuleSet), check if cached data exists.
/// - If cache exists: use cache data. If cache is not expired, don’t send API requests. If cache is expired, send API request.
/// - If cache doesn’t exist: send API requests.
/// When sending requests:
/// - If success: data with its new expiry date will be saved to cache, overriding the old cache data if any.
/// - If failure: if cached data exists, meaning it was already used, SDK won’t report error to the main app. If there’s no cache data, SDK will report error to the main app.
/// All cach data will be cleared upon SDK.reset()
SWIFT_CLASS("_TtC10BDPointSDK18ProjectPersistence")
@interface ProjectPersistence : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ProjectPersistence * _Nonnull instance;)
+ (ProjectPersistence * _Nonnull)instance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)invalidateRuleSet;
- (void)invalidateAll;
- (void)clearAll;
@end

@class StarvationDetectorRemoteConfiguration;
@class TempoRemoteConfiguration;

SWIFT_CLASS("_TtC10BDPointSDK19RemoteConfiguration")
@interface RemoteConfiguration : NSObject
@property (nonatomic, readonly) CLLocationAccuracy fenceTrackerWifiAccuracyTriggerThreshold;
@property (nonatomic, readonly) CLLocationAccuracy fenceTrackerGpsAccuracyTriggerThreshold;
@property (nonatomic, readonly) CLLocationDistance fenceTrackerCheckoutDistance;
@property (nonatomic, readonly) CLLocationDistance fenceTrackerGpsAccuracyTrackingThreshold;
@property (nonatomic, readonly) CLLocationAccuracy fenceTrackerNativeCheckinAccuracyThreshold;
@property (nonatomic, readonly) CLLocationDistance fenceTrackerNativeCheckoutDistance;
@property (nonatomic, readonly) double fenceTrackerNativeMinLocationUpdateInterval;
@property (nonatomic, readonly) int32_t maxMonitoringRegions;
@property (nonatomic, readonly) double accuracyModifierFocalDistanceCoefficient;
@property (nonatomic, readonly) BOOL periodicPollingEnabled;
@property (nonatomic, readonly) CLLocationDistance periodicPollingLocationBasicTriggerThreshold;
@property (nonatomic, readonly) CLLocationDistance periodicPollingLocationFurtherTriggerThreshold;
@property (nonatomic, readonly) CLLocationDistance periodicPollingLocationFarthestTriggerThreshold;
@property (nonatomic, readonly) enum UseCaseType useCaseType;
@property (nonatomic, readonly, strong) AccuracySuppressionRemoteConfiguration * _Nonnull accuracySuppressionConfiguration;
@property (nonatomic, readonly, strong) StarvationDetectorRemoteConfiguration * _Nonnull starvationDetectorConfiguration;
@property (nonatomic, readonly) BOOL locationInputFilteringEnabled;
@property (nonatomic, readonly) BOOL applicationLoggingEnabled;
@property (nonatomic, readonly) NSInteger maximumPageSize;
@property (nonatomic, readonly, copy) NSString * _Nonnull triggerEngine;
@property (nonatomic, readonly) enum DisableBackgroundLocation disableBackgroundLocation;
@property (nonatomic, readonly, strong) TempoRemoteConfiguration * _Nonnull tempoConfiguration;
@property (nonatomic, readonly, strong) HeartbeatRemoteConfiguration * _Nonnull heartbeatConfiguration;
@property (nonatomic, readonly) NSTimeInterval remoteConfigUpdateInterval;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, SDKApplicationState, open) {
  SDKApplicationStateActive = 0,
  SDKApplicationStateBackground = 1,
};


SWIFT_CLASS("_TtC10BDPointSDK7SdkInit")
@interface SdkInit : NSObject <LifecycleEvent>
@property (nonatomic, readonly) enum EventType eventType;
@property (nonatomic, copy) NSDate * _Nonnull eventTime;
@property (nonatomic, copy) NSString * _Nonnull timeZoneIdentifier;
@property (nonatomic) enum TriggerEngine triggerEngine;
@property (nonatomic, strong) AppState * _Nonnull appState;
@property (nonatomic, copy) NSUUID * _Nonnull uniqueId;
- (nonnull instancetype)initWithAppState:(AppState * _Nonnull)appState;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface SdkInit (SWIFT_EXTENSION(BDPointSDK))
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


@interface SdkInit (SWIFT_EXTENSION(BDPointSDK)) <Persistable>
@property (nonatomic, readonly, copy) NSString * _Nonnull entityName;
@property (nonatomic, readonly, strong) NSPredicate * _Nonnull predicate;
- (NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC10BDPointSDK8SdkReset")
@interface SdkReset : NSObject <LifecycleEvent>
@property (nonatomic, readonly) enum EventType eventType;
@property (nonatomic, copy) NSDate * _Nonnull eventTime;
@property (nonatomic, copy) NSString * _Nonnull timeZoneIdentifier;
@property (nonatomic) enum TriggerEngine triggerEngine;
@property (nonatomic, strong) AppState * _Nonnull appState;
@property (nonatomic, copy) NSUUID * _Nonnull uniqueId;
- (nonnull instancetype)initWithAppState:(AppState * _Nonnull)appState;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface SdkReset (SWIFT_EXTENSION(BDPointSDK))
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


@interface SdkReset (SWIFT_EXTENSION(BDPointSDK)) <Persistable>
@property (nonatomic, readonly, copy) NSString * _Nonnull entityName;
@property (nonatomic, readonly, strong) NSPredicate * _Nonnull predicate;
- (NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
@end

@protocol BDPTempoTrackingDelegate;
@protocol BDPBluedotServiceDelegate;
@class BDFenceTracker;
@class BDFenceCheckOutManager;
@protocol BDPLocationSensor;
@protocol BDPVariableAccuracySensor;
@class BDPointAPIRuleSetProvider;

SWIFT_CLASS("_TtC10BDPointSDK11SignalGraph")
@interface SignalGraph : NSObject
@property (nonatomic) BOOL isSDKInitialized;
@property (nonatomic) BOOL locationModeProcessorEnabled;
@property (nonatomic, readonly, strong) LocationSensor * _Nonnull locationSensor;
- (void)startGeoTriggering;
- (void)stopGeoTriggering;
- (BOOL)isGeoTriggeringInProgress SWIFT_WARN_UNUSED_RESULT;
- (void)startTempoTrackingWithDestinationId:(NSString * _Nonnull)destinationId;
- (BOOL)isTempoTrackingInProgress SWIFT_WARN_UNUSED_RESULT;
- (void)stopTempoTracking;
- (void)setTempoTrackingDelegateWithDelegate:(id <BDPTempoTrackingDelegate> _Nonnull)delegate;
- (void)setBluedotServiceDelegateWithDelegate:(id <BDPBluedotServiceDelegate> _Nonnull)delegate;
- (void)setNotificationEndpointWithEndpoint:(NSURL * _Nonnull)endpoint;
- (void)setTempoEndpointWithEndpoint:(NSURL * _Nonnull)endpoint;
- (void)checkoutWithPendingEvent:(PendingEvent * _Nonnull)pendingEvent exitNotification:(TriggerEventNotification * _Nonnull)exitNotification;
- (void)enteredZoneWithTriggerEventNotification:(TriggerEventNotification * _Nonnull)triggerEventNotification;
- (void)sendLifecycleEventsOnResetSdk;
- (nonnull instancetype)initWithObjcFenceTracker:(BDFenceTracker * _Nonnull)objcFenceTracker objcFenceCheckOutManager:(BDFenceCheckOutManager * _Nonnull)objcFenceCheckOutManager objcLocationSensor:(id <BDPLocationSensor, BDPVariableAccuracySensor> _Nonnull)objcLocationSensor objcRuleSetProvider:(BDPointAPIRuleSetProvider * _Nonnull)objcRuleSetProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, SqliteURL, open) {
  SqliteURLOld = 0,
  SqliteURLNew = 1,
};


SWIFT_CLASS("_TtC10BDPointSDK37StarvationDetectorRemoteConfiguration")
@interface StarvationDetectorRemoteConfiguration : NSObject
@property (nonatomic, readonly) NSTimeInterval starvationDetectorMinAllowedStarvationTimeInterval;
@property (nonatomic, readonly) NSTimeInterval starvationDetectorSecsAllowedPerMetre;
@property (nonatomic, readonly) BOOL starvationDetectorEnabled;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP10BDPointSDK10TempoEvent_")
@protocol TempoEvent <Event>
@property (nonatomic, readonly, copy) NSString * _Nonnull destinationId;
@end


SWIFT_CLASS("_TtC10BDPointSDK22TempoEventNotification")
@interface TempoEventNotification : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface TempoEventNotification (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC10BDPointSDK24TempoRemoteConfiguration")
@interface TempoRemoteConfiguration : NSObject
@property (nonatomic, readonly) NSTimeInterval tempoUpdateInterval;
@property (nonatomic, readonly) NSTimeInterval tempoTimeoutPeriod;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end

enum TempoStopReason : NSInteger;

SWIFT_CLASS("_TtC10BDPointSDK9TempoStop")
@interface TempoStop : NSObject <TempoEvent>
@property (nonatomic, readonly) enum EventType eventType;
@property (nonatomic, copy) NSDate * _Nonnull eventTime;
@property (nonatomic, copy) NSString * _Nonnull timeZoneIdentifier;
@property (nonatomic) enum TriggerEngine triggerEngine;
@property (nonatomic, strong) AppState * _Nonnull appState;
@property (nonatomic, copy) NSString * _Nonnull destinationId;
- (nonnull instancetype)initWithDestinationId:(NSString * _Nonnull)destinationId stopReason:(enum TempoStopReason)stopReason appState:(AppState * _Nonnull)appState;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


typedef SWIFT_ENUM(NSInteger, TempoStopReason, open) {
  TempoStopReasonInvalidDestinationId = 0,
  TempoStopReasonStoppedByCustomerApp = 1,
  TempoStopReasonSdkLogout = 2,
  TempoStopReasonExpired = 3,
  TempoStopReasonTempoNotEnabled = 4,
};


/// Detail of the <code>TempoUpdate</code> event being reported to main application via callback <code>BDPTempoTrackingDelegate/tempoTrackingDidUpdate(_:)</code>
/// Includes details of the destination and ETA information
SWIFT_CLASS("_TtC10BDPointSDK19TempoTrackingUpdate")
@interface TempoTrackingUpdate : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface TempoTrackingUpdate (SWIFT_EXTENSION(BDPointSDK)) <JsonString>
/// Convert to JSON string
/// This function throws an error if JSON encoding process fails
- (NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end



@interface TempoTrackingUpdate (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC10BDPointSDK11TempoUpdate")
@interface TempoUpdate : NSObject <TempoEvent>
@property (nonatomic, readonly) enum EventType eventType;
@property (nonatomic, copy) NSDate * _Nonnull eventTime;
@property (nonatomic, copy) NSString * _Nonnull timeZoneIdentifier;
@property (nonatomic) enum TriggerEngine triggerEngine;
@property (nonatomic, strong) AppState * _Nonnull appState;
@property (nonatomic, copy) NSString * _Nonnull destinationId;
- (nonnull instancetype)initWithLocations:(NSArray<CLLocation *> * _Nonnull)locations destinationId:(NSString * _Nonnull)destinationId appState:(AppState * _Nonnull)appState;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// ETA Direction
typedef SWIFT_ENUM(NSInteger, TempoUpdateETADirection, open) {
/// When the ETA is less than the eta value
  TempoUpdateETADirectionLessThan = 0,
/// When the ETA is greater than the eta value
  TempoUpdateETADirectionGreaterThan = 1,
/// Unknown
  TempoUpdateETADirectionUnknown = -1,
};

/// Trigger Engine of the PointSDK when this trigger happens.
/// @see <a href="https://docs.bluedot.io/ios-sdk/ios-features/ios-features-enhanced-sdk-restart/">our documentation</a> for more details.
typedef SWIFT_ENUM(NSInteger, TriggerEngine, open) {
/// <code>bd</code> is the default engine using Bluedot’s GeoFencing solution
  TriggerEngineBd = 0,
/// <code>native</code> engine utilizes iOS native GeoFencing when the app is not running.
  TriggerEngineNative = 1,
};



SWIFT_CLASS("_TtC10BDPointSDK24TriggerEventNotification")
@interface TriggerEventNotification : NSObject
- (nonnull instancetype)initWithZoneInfo:(ZoneInfo * _Nonnull)zoneInfo triggerEvents:(NSArray<id <TriggerEvent>> * _Nonnull)triggerEvents notificationType:(enum NotificationType)notificationType chainId:(NSUUID * _Nonnull)chainId metadata:(NSDictionary<NSString *, NSString *> * _Nonnull)metadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface TriggerEventNotification (SWIFT_EXTENSION(BDPointSDK))
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


@interface TriggerEventNotification (SWIFT_EXTENSION(BDPointSDK)) <Persistable>
@property (nonatomic, readonly, copy) NSString * _Nonnull entityName;
@property (nonatomic, readonly, strong) NSPredicate * _Nonnull predicate;
- (nonnull instancetype)initWithManagedObject:(MOTriggerEventNotification * _Nonnull)notification;
- (NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
@end



@interface UNMutableNotificationContent (SWIFT_EXTENSION(BDPointSDK))
+ (UNMutableNotificationContent * _Nonnull)contentWithTitle:(NSString * _Nullable)title message:(NSString * _Nonnull)message SWIFT_WARN_UNUSED_RESULT;
+ (UNMutableNotificationContent * _Nonnull)contentWithTitle:(NSString * _Nullable)title message:(NSString * _Nonnull)message userInfo:(NSDictionary<NSString *, id> * _Nullable)userInfo SWIFT_WARN_UNUSED_RESULT;
@end


@interface UNUserNotificationCenter (SWIFT_EXTENSION(BDPointSDK))
@property (nonatomic, readonly) UNAuthorizationStatus bdAuthorizationStatus;
- (BOOL)canSendNotification SWIFT_WARN_UNUSED_RESULT;
- (void)scheduleNotificationWithNotificationId:(NSString * _Nonnull)notificationId title:(NSString * _Nullable)title message:(NSString * _Nonnull)message;
@end

typedef SWIFT_ENUM(NSInteger, UseCaseType, open) {
  UseCaseTypeRetail = 0,
  UseCaseTypeNone = 1,
};


/// Details of a Zone. See its usage in <code>GeoTriggerEvent</code>.
SWIFT_CLASS("_TtC10BDPointSDK8ZoneInfo")
@interface ZoneInfo : NSObject
/// Id of the zone
@property (nonatomic, readonly, copy) NSUUID * _Nonnull id;
/// Name of the zone
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
/// Zone customData, set from Canvas
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull customData;
/// :nodoc:
- (nonnull instancetype)initWithId:(NSUUID * _Nonnull)id name:(NSString * _Nonnull)name customData:(NSDictionary<NSString *, NSString *> * _Nonnull)customData uniqueId:(NSUUID * _Nonnull)uniqueId OBJC_DESIGNATED_INITIALIZER;
/// :nodoc:
- (nonnull instancetype)initWithZone:(ZoneInfo * _Nonnull)zone;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface ZoneInfo (SWIFT_EXTENSION(BDPointSDK)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
@end


@interface ZoneInfo (SWIFT_EXTENSION(BDPointSDK)) <JsonString>
/// Convert to JSON string
/// This function throws an error if JSON encoding process fails
- (NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


@interface ZoneInfo (SWIFT_EXTENSION(BDPointSDK))
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end



@interface ZoneInfo (SWIFT_EXTENSION(BDPointSDK)) <Persistable>
@property (nonatomic, readonly, copy) NSString * _Nonnull entityName;
@property (nonatomic, readonly, strong) NSPredicate * _Nonnull predicate;
- (NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (MOZoneInfo * _Nonnull)createManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
